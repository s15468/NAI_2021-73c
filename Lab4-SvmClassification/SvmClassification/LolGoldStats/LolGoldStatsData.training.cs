﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.LightGbm;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace Lab4_SvmClassification
{
    public partial class LolGoldStatsData
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"KDA", @"KDA"),new InputOutputColumnPair(@"CSPERMIN", @"CSPERMIN"),new InputOutputColumnPair(@"GOLDINMIN15", @"GOLDINMIN15"),new InputOutputColumnPair(@"GOLDIN30MIN", @"GOLDIN30MIN")})      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"KDA",@"CSPERMIN",@"GOLDINMIN15",@"GOLDIN30MIN"}))      
                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(@"RATING", @"RATING"))      
                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=14,MinimumExampleCountPerLeaf=2,NumberOfIterations=6,MaximumBinCountPerFeature=364,LearningRate=1F,LabelColumnName=@"RATING",FeatureColumnName=@"Features",Booster=new GradientBooster.Options(){SubsampleFraction=1F,FeatureFraction=0.637213274771727F,L1Regularization=26.8183636946742F,L2Regularization=2E-10F}}))      
                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(@"PredictedLabel", @"PredictedLabel"));

            return pipeline;
        }
    }
}
